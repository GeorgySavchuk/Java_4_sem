plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.sem2.practice9.App'
        )
    }
}
tasks.register('runContainer', Exec) {
    def cmd = 'docker run -i --name javacont javaimage'
    commandLine  = cmd.split(" ").toList()
}

tasks.register('buildImage', Exec) {
    def cmd = 'docker build --build-arg WORK_DIR=docker -t javaimage -f docker/Dockerfile.txt .'
    commandLine  = cmd.split(" ").toList()
}

tasks.register('copyFiles', Copy) {
    from 'build/libs'
    into 'docker'
    include "*.jar"
}

jar.finalizedBy(copyFiles)

copyFiles.finalizedBy(buildImage)

buildImage.finalizedBy(runContainer)
group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
